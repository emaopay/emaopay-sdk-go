/*
EmaoPay API

EmaoPay API.

API version: 1.0
Contact: support@emaopay.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package emaopay

import (
	"encoding/json"
	"time"
)

// checks if the EmaopayQrCode type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &EmaopayQrCode{}

// EmaopayQrCode struct for EmaopayQrCode
type EmaopayQrCode struct {
	Amount *string `json:"amount,omitempty"`
	Content *string `json:"content,omitempty"`
	CreatedAt *time.Time `json:"createdAt,omitempty"`
	DeletedAt *time.Time `json:"deletedAt,omitempty"`
	Id *string `json:"id,omitempty"`
	MerchantId *string `json:"merchantId,omitempty"`
	MonitorId *string `json:"monitorId,omitempty"`
	// 二维码提供商, 如: wechat, alipay
	Provider *string `json:"provider,omitempty"`
	// 解锁时间, unix时间戳, 0表示未锁定
	UnlockAt *int32 `json:"unlockAt,omitempty"`
	UpdatedAt *time.Time `json:"updatedAt,omitempty"`
}

// NewEmaopayQrCode instantiates a new EmaopayQrCode object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewEmaopayQrCode() *EmaopayQrCode {
	this := EmaopayQrCode{}
	return &this
}

// NewEmaopayQrCodeWithDefaults instantiates a new EmaopayQrCode object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewEmaopayQrCodeWithDefaults() *EmaopayQrCode {
	this := EmaopayQrCode{}
	return &this
}

// GetAmount returns the Amount field value if set, zero value otherwise.
func (o *EmaopayQrCode) GetAmount() string {
	if o == nil || IsNil(o.Amount) {
		var ret string
		return ret
	}
	return *o.Amount
}

// GetAmountOk returns a tuple with the Amount field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *EmaopayQrCode) GetAmountOk() (*string, bool) {
	if o == nil || IsNil(o.Amount) {
		return nil, false
	}
	return o.Amount, true
}

// HasAmount returns a boolean if a field has been set.
func (o *EmaopayQrCode) HasAmount() bool {
	if o != nil && !IsNil(o.Amount) {
		return true
	}

	return false
}

// SetAmount gets a reference to the given string and assigns it to the Amount field.
func (o *EmaopayQrCode) SetAmount(v string) {
	o.Amount = &v
}

// GetContent returns the Content field value if set, zero value otherwise.
func (o *EmaopayQrCode) GetContent() string {
	if o == nil || IsNil(o.Content) {
		var ret string
		return ret
	}
	return *o.Content
}

// GetContentOk returns a tuple with the Content field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *EmaopayQrCode) GetContentOk() (*string, bool) {
	if o == nil || IsNil(o.Content) {
		return nil, false
	}
	return o.Content, true
}

// HasContent returns a boolean if a field has been set.
func (o *EmaopayQrCode) HasContent() bool {
	if o != nil && !IsNil(o.Content) {
		return true
	}

	return false
}

// SetContent gets a reference to the given string and assigns it to the Content field.
func (o *EmaopayQrCode) SetContent(v string) {
	o.Content = &v
}

// GetCreatedAt returns the CreatedAt field value if set, zero value otherwise.
func (o *EmaopayQrCode) GetCreatedAt() time.Time {
	if o == nil || IsNil(o.CreatedAt) {
		var ret time.Time
		return ret
	}
	return *o.CreatedAt
}

// GetCreatedAtOk returns a tuple with the CreatedAt field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *EmaopayQrCode) GetCreatedAtOk() (*time.Time, bool) {
	if o == nil || IsNil(o.CreatedAt) {
		return nil, false
	}
	return o.CreatedAt, true
}

// HasCreatedAt returns a boolean if a field has been set.
func (o *EmaopayQrCode) HasCreatedAt() bool {
	if o != nil && !IsNil(o.CreatedAt) {
		return true
	}

	return false
}

// SetCreatedAt gets a reference to the given time.Time and assigns it to the CreatedAt field.
func (o *EmaopayQrCode) SetCreatedAt(v time.Time) {
	o.CreatedAt = &v
}

// GetDeletedAt returns the DeletedAt field value if set, zero value otherwise.
func (o *EmaopayQrCode) GetDeletedAt() time.Time {
	if o == nil || IsNil(o.DeletedAt) {
		var ret time.Time
		return ret
	}
	return *o.DeletedAt
}

// GetDeletedAtOk returns a tuple with the DeletedAt field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *EmaopayQrCode) GetDeletedAtOk() (*time.Time, bool) {
	if o == nil || IsNil(o.DeletedAt) {
		return nil, false
	}
	return o.DeletedAt, true
}

// HasDeletedAt returns a boolean if a field has been set.
func (o *EmaopayQrCode) HasDeletedAt() bool {
	if o != nil && !IsNil(o.DeletedAt) {
		return true
	}

	return false
}

// SetDeletedAt gets a reference to the given time.Time and assigns it to the DeletedAt field.
func (o *EmaopayQrCode) SetDeletedAt(v time.Time) {
	o.DeletedAt = &v
}

// GetId returns the Id field value if set, zero value otherwise.
func (o *EmaopayQrCode) GetId() string {
	if o == nil || IsNil(o.Id) {
		var ret string
		return ret
	}
	return *o.Id
}

// GetIdOk returns a tuple with the Id field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *EmaopayQrCode) GetIdOk() (*string, bool) {
	if o == nil || IsNil(o.Id) {
		return nil, false
	}
	return o.Id, true
}

// HasId returns a boolean if a field has been set.
func (o *EmaopayQrCode) HasId() bool {
	if o != nil && !IsNil(o.Id) {
		return true
	}

	return false
}

// SetId gets a reference to the given string and assigns it to the Id field.
func (o *EmaopayQrCode) SetId(v string) {
	o.Id = &v
}

// GetMerchantId returns the MerchantId field value if set, zero value otherwise.
func (o *EmaopayQrCode) GetMerchantId() string {
	if o == nil || IsNil(o.MerchantId) {
		var ret string
		return ret
	}
	return *o.MerchantId
}

// GetMerchantIdOk returns a tuple with the MerchantId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *EmaopayQrCode) GetMerchantIdOk() (*string, bool) {
	if o == nil || IsNil(o.MerchantId) {
		return nil, false
	}
	return o.MerchantId, true
}

// HasMerchantId returns a boolean if a field has been set.
func (o *EmaopayQrCode) HasMerchantId() bool {
	if o != nil && !IsNil(o.MerchantId) {
		return true
	}

	return false
}

// SetMerchantId gets a reference to the given string and assigns it to the MerchantId field.
func (o *EmaopayQrCode) SetMerchantId(v string) {
	o.MerchantId = &v
}

// GetMonitorId returns the MonitorId field value if set, zero value otherwise.
func (o *EmaopayQrCode) GetMonitorId() string {
	if o == nil || IsNil(o.MonitorId) {
		var ret string
		return ret
	}
	return *o.MonitorId
}

// GetMonitorIdOk returns a tuple with the MonitorId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *EmaopayQrCode) GetMonitorIdOk() (*string, bool) {
	if o == nil || IsNil(o.MonitorId) {
		return nil, false
	}
	return o.MonitorId, true
}

// HasMonitorId returns a boolean if a field has been set.
func (o *EmaopayQrCode) HasMonitorId() bool {
	if o != nil && !IsNil(o.MonitorId) {
		return true
	}

	return false
}

// SetMonitorId gets a reference to the given string and assigns it to the MonitorId field.
func (o *EmaopayQrCode) SetMonitorId(v string) {
	o.MonitorId = &v
}

// GetProvider returns the Provider field value if set, zero value otherwise.
func (o *EmaopayQrCode) GetProvider() string {
	if o == nil || IsNil(o.Provider) {
		var ret string
		return ret
	}
	return *o.Provider
}

// GetProviderOk returns a tuple with the Provider field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *EmaopayQrCode) GetProviderOk() (*string, bool) {
	if o == nil || IsNil(o.Provider) {
		return nil, false
	}
	return o.Provider, true
}

// HasProvider returns a boolean if a field has been set.
func (o *EmaopayQrCode) HasProvider() bool {
	if o != nil && !IsNil(o.Provider) {
		return true
	}

	return false
}

// SetProvider gets a reference to the given string and assigns it to the Provider field.
func (o *EmaopayQrCode) SetProvider(v string) {
	o.Provider = &v
}

// GetUnlockAt returns the UnlockAt field value if set, zero value otherwise.
func (o *EmaopayQrCode) GetUnlockAt() int32 {
	if o == nil || IsNil(o.UnlockAt) {
		var ret int32
		return ret
	}
	return *o.UnlockAt
}

// GetUnlockAtOk returns a tuple with the UnlockAt field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *EmaopayQrCode) GetUnlockAtOk() (*int32, bool) {
	if o == nil || IsNil(o.UnlockAt) {
		return nil, false
	}
	return o.UnlockAt, true
}

// HasUnlockAt returns a boolean if a field has been set.
func (o *EmaopayQrCode) HasUnlockAt() bool {
	if o != nil && !IsNil(o.UnlockAt) {
		return true
	}

	return false
}

// SetUnlockAt gets a reference to the given int32 and assigns it to the UnlockAt field.
func (o *EmaopayQrCode) SetUnlockAt(v int32) {
	o.UnlockAt = &v
}

// GetUpdatedAt returns the UpdatedAt field value if set, zero value otherwise.
func (o *EmaopayQrCode) GetUpdatedAt() time.Time {
	if o == nil || IsNil(o.UpdatedAt) {
		var ret time.Time
		return ret
	}
	return *o.UpdatedAt
}

// GetUpdatedAtOk returns a tuple with the UpdatedAt field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *EmaopayQrCode) GetUpdatedAtOk() (*time.Time, bool) {
	if o == nil || IsNil(o.UpdatedAt) {
		return nil, false
	}
	return o.UpdatedAt, true
}

// HasUpdatedAt returns a boolean if a field has been set.
func (o *EmaopayQrCode) HasUpdatedAt() bool {
	if o != nil && !IsNil(o.UpdatedAt) {
		return true
	}

	return false
}

// SetUpdatedAt gets a reference to the given time.Time and assigns it to the UpdatedAt field.
func (o *EmaopayQrCode) SetUpdatedAt(v time.Time) {
	o.UpdatedAt = &v
}

func (o EmaopayQrCode) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o EmaopayQrCode) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Amount) {
		toSerialize["amount"] = o.Amount
	}
	if !IsNil(o.Content) {
		toSerialize["content"] = o.Content
	}
	if !IsNil(o.CreatedAt) {
		toSerialize["createdAt"] = o.CreatedAt
	}
	if !IsNil(o.DeletedAt) {
		toSerialize["deletedAt"] = o.DeletedAt
	}
	if !IsNil(o.Id) {
		toSerialize["id"] = o.Id
	}
	if !IsNil(o.MerchantId) {
		toSerialize["merchantId"] = o.MerchantId
	}
	if !IsNil(o.MonitorId) {
		toSerialize["monitorId"] = o.MonitorId
	}
	if !IsNil(o.Provider) {
		toSerialize["provider"] = o.Provider
	}
	if !IsNil(o.UnlockAt) {
		toSerialize["unlockAt"] = o.UnlockAt
	}
	if !IsNil(o.UpdatedAt) {
		toSerialize["updatedAt"] = o.UpdatedAt
	}
	return toSerialize, nil
}

type NullableEmaopayQrCode struct {
	value *EmaopayQrCode
	isSet bool
}

func (v NullableEmaopayQrCode) Get() *EmaopayQrCode {
	return v.value
}

func (v *NullableEmaopayQrCode) Set(val *EmaopayQrCode) {
	v.value = val
	v.isSet = true
}

func (v NullableEmaopayQrCode) IsSet() bool {
	return v.isSet
}

func (v *NullableEmaopayQrCode) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableEmaopayQrCode(val *EmaopayQrCode) *NullableEmaopayQrCode {
	return &NullableEmaopayQrCode{value: val, isSet: true}
}

func (v NullableEmaopayQrCode) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableEmaopayQrCode) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


