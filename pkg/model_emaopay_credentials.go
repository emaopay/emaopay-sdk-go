/*
EmaoPay API

EmaoPay API.

API version: 1.0
Contact: support@emaopay.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package emaopaysdk

import (
	"encoding/json"
)

// checks if the EmaopayCredentials type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &EmaopayCredentials{}

// EmaopayCredentials struct for EmaopayCredentials
type EmaopayCredentials struct {
	// 临时证书密钥ID
	TmpSecretId *string `json:"tmpSecretId,omitempty"`
	// 临时证书密钥Key
	TmpSecretKey *string `json:"tmpSecretKey,omitempty"`
	// token
	Token *string `json:"token,omitempty"`
}

// NewEmaopayCredentials instantiates a new EmaopayCredentials object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewEmaopayCredentials() *EmaopayCredentials {
	this := EmaopayCredentials{}
	return &this
}

// NewEmaopayCredentialsWithDefaults instantiates a new EmaopayCredentials object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewEmaopayCredentialsWithDefaults() *EmaopayCredentials {
	this := EmaopayCredentials{}
	return &this
}

// GetTmpSecretId returns the TmpSecretId field value if set, zero value otherwise.
func (o *EmaopayCredentials) GetTmpSecretId() string {
	if o == nil || IsNil(o.TmpSecretId) {
		var ret string
		return ret
	}
	return *o.TmpSecretId
}

// GetTmpSecretIdOk returns a tuple with the TmpSecretId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *EmaopayCredentials) GetTmpSecretIdOk() (*string, bool) {
	if o == nil || IsNil(o.TmpSecretId) {
		return nil, false
	}
	return o.TmpSecretId, true
}

// HasTmpSecretId returns a boolean if a field has been set.
func (o *EmaopayCredentials) HasTmpSecretId() bool {
	if o != nil && !IsNil(o.TmpSecretId) {
		return true
	}

	return false
}

// SetTmpSecretId gets a reference to the given string and assigns it to the TmpSecretId field.
func (o *EmaopayCredentials) SetTmpSecretId(v string) {
	o.TmpSecretId = &v
}

// GetTmpSecretKey returns the TmpSecretKey field value if set, zero value otherwise.
func (o *EmaopayCredentials) GetTmpSecretKey() string {
	if o == nil || IsNil(o.TmpSecretKey) {
		var ret string
		return ret
	}
	return *o.TmpSecretKey
}

// GetTmpSecretKeyOk returns a tuple with the TmpSecretKey field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *EmaopayCredentials) GetTmpSecretKeyOk() (*string, bool) {
	if o == nil || IsNil(o.TmpSecretKey) {
		return nil, false
	}
	return o.TmpSecretKey, true
}

// HasTmpSecretKey returns a boolean if a field has been set.
func (o *EmaopayCredentials) HasTmpSecretKey() bool {
	if o != nil && !IsNil(o.TmpSecretKey) {
		return true
	}

	return false
}

// SetTmpSecretKey gets a reference to the given string and assigns it to the TmpSecretKey field.
func (o *EmaopayCredentials) SetTmpSecretKey(v string) {
	o.TmpSecretKey = &v
}

// GetToken returns the Token field value if set, zero value otherwise.
func (o *EmaopayCredentials) GetToken() string {
	if o == nil || IsNil(o.Token) {
		var ret string
		return ret
	}
	return *o.Token
}

// GetTokenOk returns a tuple with the Token field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *EmaopayCredentials) GetTokenOk() (*string, bool) {
	if o == nil || IsNil(o.Token) {
		return nil, false
	}
	return o.Token, true
}

// HasToken returns a boolean if a field has been set.
func (o *EmaopayCredentials) HasToken() bool {
	if o != nil && !IsNil(o.Token) {
		return true
	}

	return false
}

// SetToken gets a reference to the given string and assigns it to the Token field.
func (o *EmaopayCredentials) SetToken(v string) {
	o.Token = &v
}

func (o EmaopayCredentials) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o EmaopayCredentials) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.TmpSecretId) {
		toSerialize["tmpSecretId"] = o.TmpSecretId
	}
	if !IsNil(o.TmpSecretKey) {
		toSerialize["tmpSecretKey"] = o.TmpSecretKey
	}
	if !IsNil(o.Token) {
		toSerialize["token"] = o.Token
	}
	return toSerialize, nil
}

type NullableEmaopayCredentials struct {
	value *EmaopayCredentials
	isSet bool
}

func (v NullableEmaopayCredentials) Get() *EmaopayCredentials {
	return v.value
}

func (v *NullableEmaopayCredentials) Set(val *EmaopayCredentials) {
	v.value = val
	v.isSet = true
}

func (v NullableEmaopayCredentials) IsSet() bool {
	return v.isSet
}

func (v *NullableEmaopayCredentials) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableEmaopayCredentials(val *EmaopayCredentials) *NullableEmaopayCredentials {
	return &NullableEmaopayCredentials{value: val, isSet: true}
}

func (v NullableEmaopayCredentials) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableEmaopayCredentials) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


