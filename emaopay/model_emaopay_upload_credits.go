/*
EmaoPay API

EmaoPay API.

API version: 1.0
Contact: support@emaopay.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package emaopay

import (
	"encoding/json"
)

// checks if the EmaopayUploadCredits type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &EmaopayUploadCredits{}

// EmaopayUploadCredits struct for EmaopayUploadCredits
type EmaopayUploadCredits struct {
	// 存储桶名
	Bucket *string `json:"bucket,omitempty"`
	// 临时证书
	Credentials *EmaopayCredentials `json:"credentials,omitempty"`
	// 证书有效的时间，以 iso8601 格式的 UTC 时间表示 注意：此字段可能返回 null，表示取不到有效值。
	Expiration *string `json:"expiration,omitempty"`
	// 临时证书有效的时间，返回 Unix 时间戳，精确到秒
	ExpiredTime *int32 `json:"expiredTime,omitempty"`
	// 区域
	Region *string `json:"region,omitempty"`
}

// NewEmaopayUploadCredits instantiates a new EmaopayUploadCredits object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewEmaopayUploadCredits() *EmaopayUploadCredits {
	this := EmaopayUploadCredits{}
	return &this
}

// NewEmaopayUploadCreditsWithDefaults instantiates a new EmaopayUploadCredits object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewEmaopayUploadCreditsWithDefaults() *EmaopayUploadCredits {
	this := EmaopayUploadCredits{}
	return &this
}

// GetBucket returns the Bucket field value if set, zero value otherwise.
func (o *EmaopayUploadCredits) GetBucket() string {
	if o == nil || IsNil(o.Bucket) {
		var ret string
		return ret
	}
	return *o.Bucket
}

// GetBucketOk returns a tuple with the Bucket field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *EmaopayUploadCredits) GetBucketOk() (*string, bool) {
	if o == nil || IsNil(o.Bucket) {
		return nil, false
	}
	return o.Bucket, true
}

// HasBucket returns a boolean if a field has been set.
func (o *EmaopayUploadCredits) HasBucket() bool {
	if o != nil && !IsNil(o.Bucket) {
		return true
	}

	return false
}

// SetBucket gets a reference to the given string and assigns it to the Bucket field.
func (o *EmaopayUploadCredits) SetBucket(v string) {
	o.Bucket = &v
}

// GetCredentials returns the Credentials field value if set, zero value otherwise.
func (o *EmaopayUploadCredits) GetCredentials() EmaopayCredentials {
	if o == nil || IsNil(o.Credentials) {
		var ret EmaopayCredentials
		return ret
	}
	return *o.Credentials
}

// GetCredentialsOk returns a tuple with the Credentials field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *EmaopayUploadCredits) GetCredentialsOk() (*EmaopayCredentials, bool) {
	if o == nil || IsNil(o.Credentials) {
		return nil, false
	}
	return o.Credentials, true
}

// HasCredentials returns a boolean if a field has been set.
func (o *EmaopayUploadCredits) HasCredentials() bool {
	if o != nil && !IsNil(o.Credentials) {
		return true
	}

	return false
}

// SetCredentials gets a reference to the given EmaopayCredentials and assigns it to the Credentials field.
func (o *EmaopayUploadCredits) SetCredentials(v EmaopayCredentials) {
	o.Credentials = &v
}

// GetExpiration returns the Expiration field value if set, zero value otherwise.
func (o *EmaopayUploadCredits) GetExpiration() string {
	if o == nil || IsNil(o.Expiration) {
		var ret string
		return ret
	}
	return *o.Expiration
}

// GetExpirationOk returns a tuple with the Expiration field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *EmaopayUploadCredits) GetExpirationOk() (*string, bool) {
	if o == nil || IsNil(o.Expiration) {
		return nil, false
	}
	return o.Expiration, true
}

// HasExpiration returns a boolean if a field has been set.
func (o *EmaopayUploadCredits) HasExpiration() bool {
	if o != nil && !IsNil(o.Expiration) {
		return true
	}

	return false
}

// SetExpiration gets a reference to the given string and assigns it to the Expiration field.
func (o *EmaopayUploadCredits) SetExpiration(v string) {
	o.Expiration = &v
}

// GetExpiredTime returns the ExpiredTime field value if set, zero value otherwise.
func (o *EmaopayUploadCredits) GetExpiredTime() int32 {
	if o == nil || IsNil(o.ExpiredTime) {
		var ret int32
		return ret
	}
	return *o.ExpiredTime
}

// GetExpiredTimeOk returns a tuple with the ExpiredTime field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *EmaopayUploadCredits) GetExpiredTimeOk() (*int32, bool) {
	if o == nil || IsNil(o.ExpiredTime) {
		return nil, false
	}
	return o.ExpiredTime, true
}

// HasExpiredTime returns a boolean if a field has been set.
func (o *EmaopayUploadCredits) HasExpiredTime() bool {
	if o != nil && !IsNil(o.ExpiredTime) {
		return true
	}

	return false
}

// SetExpiredTime gets a reference to the given int32 and assigns it to the ExpiredTime field.
func (o *EmaopayUploadCredits) SetExpiredTime(v int32) {
	o.ExpiredTime = &v
}

// GetRegion returns the Region field value if set, zero value otherwise.
func (o *EmaopayUploadCredits) GetRegion() string {
	if o == nil || IsNil(o.Region) {
		var ret string
		return ret
	}
	return *o.Region
}

// GetRegionOk returns a tuple with the Region field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *EmaopayUploadCredits) GetRegionOk() (*string, bool) {
	if o == nil || IsNil(o.Region) {
		return nil, false
	}
	return o.Region, true
}

// HasRegion returns a boolean if a field has been set.
func (o *EmaopayUploadCredits) HasRegion() bool {
	if o != nil && !IsNil(o.Region) {
		return true
	}

	return false
}

// SetRegion gets a reference to the given string and assigns it to the Region field.
func (o *EmaopayUploadCredits) SetRegion(v string) {
	o.Region = &v
}

func (o EmaopayUploadCredits) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o EmaopayUploadCredits) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Bucket) {
		toSerialize["bucket"] = o.Bucket
	}
	if !IsNil(o.Credentials) {
		toSerialize["credentials"] = o.Credentials
	}
	if !IsNil(o.Expiration) {
		toSerialize["expiration"] = o.Expiration
	}
	if !IsNil(o.ExpiredTime) {
		toSerialize["expiredTime"] = o.ExpiredTime
	}
	if !IsNil(o.Region) {
		toSerialize["region"] = o.Region
	}
	return toSerialize, nil
}

type NullableEmaopayUploadCredits struct {
	value *EmaopayUploadCredits
	isSet bool
}

func (v NullableEmaopayUploadCredits) Get() *EmaopayUploadCredits {
	return v.value
}

func (v *NullableEmaopayUploadCredits) Set(val *EmaopayUploadCredits) {
	v.value = val
	v.isSet = true
}

func (v NullableEmaopayUploadCredits) IsSet() bool {
	return v.isSet
}

func (v *NullableEmaopayUploadCredits) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableEmaopayUploadCredits(val *EmaopayUploadCredits) *NullableEmaopayUploadCredits {
	return &NullableEmaopayUploadCredits{value: val, isSet: true}
}

func (v NullableEmaopayUploadCredits) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableEmaopayUploadCredits) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


